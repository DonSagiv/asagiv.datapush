@page "/"
@using Grpc.Net.Client
@using System.Reactive.Linq
@using System.Reactive
@using asagiv.pushrocket.common.Models
@using asagiv.pushrocket.ui.common.ViewModels
@inject MainViewModel ViewModel
@inject IMessageService MessageService

<Div>

    <Div class="d-flex align-items-stretch">

        <Div class="form-floating flex-grow-1" Margin="Margin.Is2">

            <TextEdit InputMode="TextInputMode.Url" Background="Background.Light" TextColor="TextColor.Dark"
                      class="form-control" id="floatingInput" @bind-Text="@ViewModel.ConnectionString" placeholder=" " />

            <FieldLabel For="floatingInput">Connection String</FieldLabel>

        </Div>

        <Button Color="Color.Primary" Margin="Margin.Is2" Clicked="@(x => ViewModel.ConnectCommand.Execute(null))">Connect</Button>

    </Div>

    @if (ViewModel.IsConnected)
    {
        <Div class="d-flex align-items-stretch">

            <Button Color="Color.Primary" Margin="Margin.Is2" Clicked="@(x => ViewModel.PushFilesCommand.Execute(null))" Block>Select Files</Button>

        </Div>
    }

</Div>

@code
{
    private Snackbar _snackbar;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ViewModel.ErrorObservable
            .SelectMany(ShowErrorNotifier)
            .Subscribe();

        ViewModel.PropertyChanged += (s, e) => this.StateHasChanged();
    }

    private async Task<Unit> ShowErrorNotifier(string errorMessage)
    {
        await MessageService.Error(errorMessage, "Error");

        return Unit.Default;
    }
}